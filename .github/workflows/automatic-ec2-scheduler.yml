name: EC2 Instance Automation

on:
  schedule:
    # Trigger at 7:20 AM IST (1:50 AM UTC) to start the instance (Sunday to Friday)
    - cron: "50 1 * * 0-5"
    # Trigger at 7:22 AM IST (1:52 AM UTC) to stop the instance (Sunday to Friday)
    - cron: "52 1 * * 0-5"

jobs:
  manage-ec2-instance:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Set up AWS CLI
        uses: aws-actions/configure-aws-credentials@v3
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ap-south-1  # Replace with your AWS region

      - name: Perform EC2 Action
        run: |
          #!/bin/bash
          set -e

          # Instance ID - Replace with your EC2 instance ID
          INSTANCE_ID="i-03613c3a66bc4e6fd"

          # Get the current state of the instance
          INSTANCE_STATE=$(aws ec2 describe-instances \
            --instance-ids "$INSTANCE_ID" \
            --query "Reservations[*].Instances[*].State.Name" \
            --output text)

          echo "Current EC2 instance state: $INSTANCE_STATE"

          # Determine whether to start or stop based on the cron time
          if [[ "${{ github.event.schedule }}" == "50 1 * * 0-5" ]]; then
            # Start EC2 instance if not running
            if [ "$INSTANCE_STATE" != "running" ]; then
              echo "Starting EC2 instance: $INSTANCE_ID"
              aws ec2 start-instances --instance-ids "$INSTANCE_ID"
            else
              echo "EC2 instance: $INSTANCE_ID is already running. No action needed."
            fi
          elif [[ "${{ github.event.schedule }}" == "52 1 * * 0-5" ]]; then
            # Stop EC2 instance if not stopped
            if [ "$INSTANCE_STATE" != "stopped" ]; then
              echo "Stopping EC2 instance: $INSTANCE_ID"
              aws ec2 stop-instances --instance-ids "$INSTANCE_ID"
            else
              echo "EC2 instance: $INSTANCE_ID is already stopped. No action needed."
            fi
          else
            echo "Invalid cron schedule. Exiting."
            exit 1
          fi
